/*******************************************************************************
 * Copyright (c) 2000, 2003 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials 
 * are made available under the terms of the Common Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/

package org.eclipse.jdt.internal.compiler.parser;

/**
 * IMPORTANT NOTE: These constants are dedicated to the internal Scanner implementation. 
 * It is mirrored in org.eclipse.jdt.core.compiler public package where it is API. 
 * The mirror implementation is using the backward compatible ITerminalSymbols constant 
 * definitions (stable with 2.0), whereas the internal implementation uses TerminalTokens 
 * which constant values reflect the latest parser generation state.
 */
 
/**
 * Maps each terminal symbol in the java-grammar into a unique integer. 
 * This integer is used to represent the terminal when computing a parsing action. 
 * 
 * Disclaimer : These constant values are generated automatically using a Java 
 * grammar, therefore their actual values are subject to change if new keywords 
 * were added to the language (for instance, 'assert' is a keyword in 1.4).
 */
public interface TerminalTokens {

	// special tokens not part of grammar - not autogenerated
	int 
		TokenNameWHITESPACE = 1000,
		TokenNameCOMMENT_LINE = 1001,
		TokenNameCOMMENT_BLOCK = 1002,
		TokenNameCOMMENT_JAVADOC = 1003;
	
	int
      TokenNameIdentifier = 6,
      TokenNameabstract = 99,
      TokenNameassert = 129,
      TokenNameboolean = 25,
      TokenNamebreak = 130,
      TokenNamebyte = 26,
      TokenNamecase = 178,
      TokenNamecatch = 181,
      TokenNamechar = 27,
      TokenNameclass = 176,
      TokenNamecontinue = 131,
      TokenNamedefault = 251,
      TokenNamedo = 132,
      TokenNamedouble = 28,
      TokenNameelse = 179,
      TokenNameextends = 182,
      TokenNamefalse = 51,
      TokenNamefinal = 100,
      TokenNamefinally = 183,
      TokenNamefloat = 29,
      TokenNamefor = 133,
      TokenNameif = 134,
      TokenNameimplements = 200,
      TokenNameimport = 173,
      TokenNameinstanceof = 22,
      TokenNameint = 30,
      TokenNameinterface = 206,
      TokenNamelong = 31,
      TokenNamenative = 101,
      TokenNamenew = 46,
      TokenNamenull = 52,
      TokenNamepackage = 180,
      TokenNameprivate = 102,
      TokenNameprotected = 103,
      TokenNamepublic = 104,
      TokenNamereturn = 135,
      TokenNameshort = 32,
      TokenNamestatic = 97,
      TokenNamestrictfp = 105,
      TokenNamesuper = 49,
      TokenNameswitch = 136,
      TokenNamesynchronized = 95,
      TokenNamethis = 50,
      TokenNamethrow = 137,
      TokenNamethrows = 170,
      TokenNametransient = 106,
      TokenNametrue = 53,
      TokenNametry = 138,
      TokenNamevoid = 33,
      TokenNamevolatile = 107,
      TokenNamewhile = 128,
      TokenNameaspect = 11,
      TokenNamepointcut = 14,
      TokenNamearound = 18,
      TokenNamebefore = 16,
      TokenNameafter = 17,
      TokenNamedeclare = 15,
      TokenNameprivileged = 12,
      TokenNameIntegerLiteral = 54,
      TokenNameLongLiteral = 55,
      TokenNameFloatingPointLiteral = 56,
      TokenNameDoubleLiteral = 57,
      TokenNameCharacterLiteral = 58,
      TokenNameStringLiteral = 59,
      TokenNamePLUS_PLUS = 3,
      TokenNameMINUS_MINUS = 4,
      TokenNameEQUAL_EQUAL = 45,
      TokenNameLESS_EQUAL = 35,
      TokenNameGREATER_EQUAL = 36,
      TokenNameNOT_EQUAL = 47,
      TokenNameLEFT_SHIFT = 21,
      TokenNameRIGHT_SHIFT = 19,
      TokenNameUNSIGNED_RIGHT_SHIFT = 20,
      TokenNamePLUS_EQUAL = 184,
      TokenNameMINUS_EQUAL = 185,
      TokenNameMULTIPLY_EQUAL = 186,
      TokenNameDIVIDE_EQUAL = 187,
      TokenNameAND_EQUAL = 188,
      TokenNameOR_EQUAL = 189,
      TokenNameXOR_EQUAL = 190,
      TokenNameREMAINDER_EQUAL = 191,
      TokenNameLEFT_SHIFT_EQUAL = 192,
      TokenNameRIGHT_SHIFT_EQUAL = 193,
      TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL = 194,
      TokenNameOR_OR = 84,
      TokenNameAND_AND = 83,
      TokenNamePLUS = 1,
      TokenNameMINUS = 2,
      TokenNameNOT = 87,
      TokenNameREMAINDER = 9,
      TokenNameXOR = 80,
      TokenNameAND = 63,
      TokenNameMULTIPLY = 7,
      TokenNameOR = 85,
      TokenNameTWIDDLE = 90,
      TokenNameDIVIDE = 10,
      TokenNameGREATER = 37,
      TokenNameLESS = 38,
      TokenNameLPAREN = 8,
      TokenNameRPAREN = 86,
      TokenNameLBRACE = 127,
      TokenNameRBRACE = 108,
      TokenNameLBRACKET = 13,
      TokenNameRBRACKET = 125,
      TokenNameSEMICOLON = 48,
      TokenNameQUESTION = 88,
      TokenNameCOLON = 111,
      TokenNameCOMMA = 89,
      TokenNameDOT = 5,
      TokenNameEQUAL = 171,
      TokenNameEOF = 139,
      TokenNameERROR = 354;
}
