/*******************************************************************************
 * Copyright (c) 2000, 2005 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.jdt.internal.compiler.parser;

/**
 * IMPORTANT NOTE: These constants are dedicated to the internal Scanner implementation. 
 * It is mirrored in org.eclipse.jdt.core.compiler public package where it is API. 
 * The mirror implementation is using the backward compatible ITerminalSymbols constant 
 * definitions (stable with 2.0), whereas the internal implementation uses TerminalTokens 
 * which constant values reflect the latest parser generation state.
 */
/**
 * Maps each terminal symbol in the java-grammar into a unique integer. 
 * This integer is used to represent the terminal when computing a parsing action. 
 * 
 * Disclaimer : These constant values are generated automatically using a Java 
 * grammar, therefore their actual values are subject to change if new keywords 
 * were added to the language (for instance, 'assert' is a keyword in 1.4).
 */
public interface TerminalTokens {

	// special tokens not part of grammar - not autogenerated
	int TokenNameWHITESPACE = 1000,
		TokenNameCOMMENT_LINE = 1001,
		TokenNameCOMMENT_BLOCK = 1002,
		TokenNameCOMMENT_JAVADOC = 1003;

	  public final static int
	     TokenNameIdentifier = 22,
	      TokenNameabstract = 63,
	      TokenNameassert = 79,
	      TokenNameboolean = 39,
	      TokenNamebreak = 80,
	      TokenNamebyte = 40,
	      TokenNamecase = 94,
	      TokenNamecatch = 95,
	      TokenNamechar = 41,
	      TokenNameclass = 90,
	      TokenNamecontinue = 81,
	      TokenNameconst = 115,
	      TokenNamedefault = 114,
	      TokenNamedo = 82,
	      TokenNamedouble = 42,
	      TokenNameelse = 96,
	      TokenNameenum = 100,
	      TokenNameextends = 91,
	      TokenNamefalse = 54,
	      TokenNamefinal = 64,
	      TokenNamefinally = 97,
	      TokenNamefloat = 43,
	      TokenNamefor = 83,
	      TokenNamegoto = 116,
	      TokenNameif = 84,
	      TokenNameimplements = 101,
	      TokenNameimport = 93,
	      TokenNameinstanceof = 14,
	      TokenNameint = 44,
	      TokenNameinterface = 98,
	      TokenNamelong = 45,
	      TokenNamenative = 65,
	      TokenNamenew = 49,
	      TokenNamenull = 55,
	      TokenNamepackage = 89,
	      TokenNameprivate = 66,
	      TokenNameprotected = 67,
	      TokenNamepublic = 68,
	      TokenNamereturn = 85,
	      TokenNameshort = 46,
	      TokenNamestatic = 52,
	      TokenNamestrictfp = 69,
	      TokenNamesuper = 48,
	      TokenNameswitch = 86,
	      TokenNamesynchronized = 53,
	      TokenNamethis = 50,
	      TokenNamethrow = 87,
	      TokenNamethrows = 99,
	      TokenNametransient = 70,
	      TokenNametrue = 56,
	      TokenNametry = 88,
	      TokenNamevoid = 47,
	      TokenNamevolatile = 71,
	      TokenNamewhile = 78,
	      TokenNameaspect = 29,
	      TokenNamepointcut = 32,
	      TokenNamearound = 36,
	      TokenNamebefore = 34,
	      TokenNameafter = 35,
	      TokenNamedeclare = 33,
	      TokenNameprivileged = 30,
	      TokenNameIntegerLiteral = 57,
	      TokenNameLongLiteral = 58,
	      TokenNameFloatingPointLiteral = 59,
	      TokenNameDoubleLiteral = 60,
	      TokenNameCharacterLiteral = 61,
	      TokenNameStringLiteral = 62,
	      TokenNamePLUS_PLUS = 11,
	      TokenNameMINUS_MINUS = 12,
	      TokenNameEQUAL_EQUAL = 19,
	      TokenNameLESS_EQUAL = 16,
	      TokenNameGREATER_EQUAL = 17,
	      TokenNameNOT_EQUAL = 20,
	      TokenNameLEFT_SHIFT = 15,
	      TokenNameRIGHT_SHIFT = 8,
	      TokenNameUNSIGNED_RIGHT_SHIFT = 9,
	      TokenNamePLUS_EQUAL = 102,
	      TokenNameMINUS_EQUAL = 103,
	      TokenNameMULTIPLY_EQUAL = 104,
	      TokenNameDIVIDE_EQUAL = 105,
	      TokenNameAND_EQUAL = 106,
	      TokenNameOR_EQUAL = 107,
	      TokenNameXOR_EQUAL = 108,
	      TokenNameREMAINDER_EQUAL = 109,
	      TokenNameLEFT_SHIFT_EQUAL = 110,
	      TokenNameRIGHT_SHIFT_EQUAL = 111,
	      TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL = 112,
	      TokenNameOR_OR = 26,
	      TokenNameAND_AND = 25,
	      TokenNamePLUS = 2,
	      TokenNameMINUS = 3,
	      TokenNameNOT = 73,
	      TokenNameREMAINDER = 6,
	      TokenNameXOR = 23,
	      TokenNameAND = 18,
	      TokenNameMULTIPLY = 4,
	      TokenNameOR = 27,
	      TokenNameTWIDDLE = 76,
	      TokenNameDIVIDE = 7,
	      TokenNameGREATER = 10,
	      TokenNameLESS = 5,
	      TokenNameLPAREN = 21,
	      TokenNameRPAREN = 31,
	      TokenNameLBRACE = 74,
	      TokenNameRBRACE = 38,
	      TokenNameLBRACKET = 13,
	      TokenNameRBRACKET = 77,
	      TokenNameSEMICOLON = 28,
	      TokenNameQUESTION = 24,
	      TokenNameCOLON = 72,
	      TokenNameCOMMA = 37,
	      TokenNameDOT = 1,
	      TokenNameEQUAL = 92,
	      TokenNameAT = 51,
	      TokenNameELLIPSIS = 113,
	      TokenNameEOF = 75,
	      TokenNameERROR= 117;
}
